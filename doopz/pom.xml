<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    		xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
    							http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.joolzminer</groupId>
    <artifactId>doopz-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>Doopz</name>
    <description>Doopz is an app that looks for duplicate files in your file system.</description>
    
	<packaging>pom</packaging>
	
    <properties>
    	<!-- skip artifact deployment on the remote repository -->
    	<maven.deploy.skip>true</maven.deploy.skip>
    	
    	<!-- prevent the Platform dependent warning message -->
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    	
    	<!-- Versions used -->
    	<javax.inject.version>1</javax.inject.version>
		<spring.context.version>3.2.2.RELEASE</spring.context.version>
		<spring.test.version>3.2.2.RELEASE</spring.test.version>
		<apache.commons.io.version>2.4</apache.commons.io.version>
        <slf4j.version>1.6.4</slf4j.version>
        <junit.version>4.10</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <logback.version>1.0.1</logback.version>
        
        <!-- Plugins -->
        <jacoco.plugin.version>0.6.3.201306030806</jacoco.plugin.version>
		<tomcat.maven.plugin.version>2.0</tomcat.maven.plugin.version>

		<!-- JDK compiler options -->
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
    </properties>
	
	<modules>
		<module>doopz-services</module>
		<module>doopz-console-ui</module>
	</modules>

	<profiles>
		<profile>
			<id>sonar</id>
    		<activation>
    			<activeByDefault>true</activeByDefault>
	    	</activation>
    		<properties>
    			<sonar.profile>Joolz Miner Quality Profile</sonar.profile>
    			<sonar.branch>${project.version}</sonar.branch>
			</properties>
		</profile>
	</profiles>    
   
    <developers>
        <developer>
            <id>sergio.f.gonzalez</id>
            <name>Sergio F. Gonzalez</name>
            <email>sergio.f.gonzalez@gmail.com</email>
            <organization>JoolzMiner</organization>
            <organizationUrl>http://www.joolzminer.org</organizationUrl>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>
    
    <dependencies>	
	
		<!-- ### JEE @Inject ### -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>    
	
		<!-- ### Spring Modules ### -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.context.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>            
		</dependency>
		
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.test.version}</version>
            <scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>            
        </dependency>
		
	
		<!-- ### Spring Modules ### -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache.commons.io.version}</version>
		</dependency>
	
	
    	<!-- ### Testing Framework ### -->

    	<dependency>
      		<groupId>junit</groupId>
      		<artifactId>junit</artifactId>
      		<version>${junit.version}</version>
      		<scope>test</scope>
    	</dependency>
    
		<!-- ### Mocking Frameworks -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

    	<!-- ### Logging Framework ### -->

    	<dependency>
    		<groupId>ch.qos.logback</groupId>
    		<artifactId>logback-classic</artifactId>
    		<version>${logback.version}</version>
    	</dependency>

    	<dependency>
    		<groupId>org.slf4j</groupId>
    		<artifactId>jcl-over-slf4j</artifactId>
    		<version>${slf4j.version}</version>
    		<scope>runtime</scope>
    	</dependency>
       	
    </dependencies>
    
    
    <build>
		<defaultGoal>install</defaultGoal>
    	<finalName>${project.artifactId}</finalName>

		<!-- disable filtering on src/main/resources -->
    	<resources>
    		<resource>
    			<directory>src/main/resources</directory>
    			<filtering>false</filtering>
    		</resource>
    	</resources>
		
    	<!-- ### Plugins  ### -->
        <plugins>
		
			<!-- ### Maven Compiler ### -->
            <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
			
			<!-- ### Maven WAR Archiver ### -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>				
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<attachClasses>true</attachClasses>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<!-- ### Tomcat Maven Plugin ### -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>${tomcat.maven.plugin.version}</version>
				<configuration>
					<username>root</username>
					<password>secret</password>
					<update>true</update>
				</configuration>
			</plugin>			
			
			<!-- ### JaCoCo test coverage plugin ### -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
			</plugin>			
        </plugins>
    </build>

    <repositories>
    	<!-- Spring Repositories -->
		<repository>
	    	<id>com.springsource.repository.bundles.release</id>
	    	<name>EBR Spring Release Repository</name>
	    	<url>http://repository.springsource.com/maven/bundles/release </url>
		</repository>
		<repository>
	    	<id>com.springsource.repository.bundles.external</id>
	    	<name>EBR External Release Repository</name>
	    	<url>http://repository.springsource.com/maven/bundles/external </url>
		</repository>    
		<repository>
			<id>springsource-repository</id>
			<name>Spring Maven Releases, Milestones, and Snapshots</name>
			<url>http://repo.springsource.org/snapshot</url>
		</repository>		

		<!-- Spring Data Repositories -->
		<repository>
			<id>spring-snapshot</id>
			<name>Spring Maven SNAPSHOT Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>
		
		<!-- Hibernate Repositories -->
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>		
    </repositories>
</project>